import urllib2
from bs4 import BeautifulSoup
import csv
import operator

import time
start_time = time.time()




# AMC
url = "https://artofproblemsolving.com/wiki/index.php/{YEAR_NUMBER}_AMC_{AMC_TYPE}_Answer_Key"

for amcType in ("10A", "10B", "12A", "12B"):
	runningTotal = {"A": 0, "B": 0, "C": 0, "D": 0, "E": 0}
	new_url = url.replace("{AMC_TYPE}", amcType)
	for i in range(2019, 2001, -1):
		new_new_url = new_url.replace("{YEAR_NUMBER}", str(i))
		page = urllib2.urlopen(new_new_url)
		soup = BeautifulSoup(page, "html.parser")
		answers_div =  soup.find(attrs = {"class": "mw-content-ltr"})
		answers = answers_div.find_all("li")
		answers = [ans.text for ans in answers]
		for letter in runningTotal:
			runningTotal[letter] += answers.count(letter)
			# print letter + ":", str(answers.count(letter)), "-", str(answers.count(letter)*4) + "%"

	print "AMC " + amcType
	for letter in sorted(runningTotal):
		letterTotal = runningTotal[letter]
		print letter + ":", str(letterTotal), "-" if letterTotal >= 100 else " -", str(round(letterTotal / 4.5, 2)) + "%"
	print "=" * 15





# AIME
url = "https://artofproblemsolving.com/wiki/index.php/{YEAR_NUMBER}_AIME_{AIME_TYPE}_Answer_Key"

combinedRunningTotal = {}
for aimeType in ("I", "II"):
	runningTotal = {}
	new_url = url.replace("{AIME_TYPE}", aimeType)
	for i in range(2019, 1999, -1):
		new_new_url = new_url.replace("{YEAR_NUMBER}", str(i))
		page = urllib2.urlopen(new_new_url)
		soup = BeautifulSoup(page, "html.parser")
		answers_div =  soup.find(attrs = {"class": "mw-content-ltr"})
		answers = answers_div.find_all("li")
		answers = [ans.text for ans in answers]

		for ans in answers:
			if ans in runningTotal:
				runningTotal[ans] += 1
				combinedRunningTotal[ans] += 1
			else:
				runningTotal[ans] = 1
				if ans in combinedRunningTotal:
					combinedRunningTotal[ans] += 1
				else:
					combinedRunningTotal[ans] = 1
				
	
	print "AIME " + aimeType

	"""
	repeatAnswers = {}  # Maybe increase to >= 3
	print(runningTotal.values())
	repeatAnswers = [ans for ans in answers if runningTotal[ans] >= 3]
	repeatAnswersList = []
	for ans in answers:
		if runningTotal[ans] >= 5:
			repeatAnswersList.append(ans)
			print runningTotal[ans]
			
	print repeatAnswersList.sort() == runningTotal.values().sort()
	"""

	
	
	sortedRunningTotal = sorted(runningTotal.items(), key=operator.itemgetter(1), reverse = True)


	runningTotalRepeats = sorted([ans for ans in sortedRunningTotal if ans[1] >= 3], key=lambda x: x[0])

	
	for ans in runningTotalRepeats:
		print (ans[0] if type(ans[0]) != int else "000"), "-", ans[1]
	print "=" * 16


	 
sortedCombinedRunningTotal = sorted(combinedRunningTotal.items(), key=operator.itemgetter(1), reverse = True)

combinedRunningTotalRepeats = sorted([ans for ans in sortedCombinedRunningTotal if ans[1] >= 3], key=lambda x: x[0])

print "COMBINED AIME"
for ans in combinedRunningTotalRepeats:
	print (ans[0] if type(ans[0]) != int else "000"), "-", ans[1] # , " X" * (3-ans[1])



print("Execution Time: %s seconds" % (time.time() - start_time))		